# LEDBrick Simple Dashboard Card
# Copy this directly into your Lovelace dashboard editor
# Controls the currently selected tank group

type: vertical-stack
cards:
  # Header with status
  - type: markdown
    content: |
      # 🐠 LEDBrick Lighting
      **Tank:** {{ states('input_select.active_tank') | replace('_', ' ') | title }}
      **Units:** {{ states('sensor.active_tank_units') }}
      **Status:** {{ states('sensor.active_tank_status') }}
      **Power:** {{ states('sensor.active_tank_power') | default('0') }}W
  
  # Main controls
  - type: entities
    entities:
      - entity: input_number.tank_brightness
        name: Brightness
        
      - type: button
        name: Toggle Schedule
        icon: mdi:calendar-clock
        tap_action:
          action: call-service
          service: script.tank_scheduler_control
          data:
            enabled: >
              {% set groups = states('input_text.tank_groups') | from_json %}
              {% set tank = states('input_select.active_tank') %}
              {% set units = groups.get(tank, []) %}
              {% if units | length > 0 %}
                {{ not is_state('switch.' + units[0] + '_scheduler_enabled', 'on') }}
              {% else %}
                true
              {% endif %}
  
  # Quick actions
  - type: horizontal-stack
    cards:
      - type: button
        name: Feed
        icon: mdi:fish
        tap_action:
          action: call-service
          service: script.turn_on
          target:
            entity_id: script.feeding_mode_start
        entity: input_boolean.feeding_mode
        show_state: true
        
      - type: button
        name: Photo
        icon: mdi:camera
        tap_action:
          action: call-service
          service: script.tank_set_brightness
          data:
            brightness: 85
        
      - type: button
        name: Night
        icon: mdi:weather-night
        tap_action:
          action: call-service
          service: script.tank_scheduler_control
          data:
            enabled: false
  
  # Channel overview - Note: Update entity names to match your first unit
  - type: markdown
    content: |
      ### Channel Status
      {% set groups = states('input_text.tank_groups') | from_json %}
      {% set tank = states('input_select.active_tank') %}
      {% set units = groups.get(tank, []) %}
      {% if units | length > 0 %}
        {% set unit = units[0] %}
        **Blue:** {{ states('sensor.' + unit + '_scheduler_pwm_channel_1') | default('--') }}% | 
        **White:** {{ states('sensor.' + unit + '_scheduler_pwm_channel_4') | default('--') }}% | 
        **Red:** {{ states('sensor.' + unit + '_scheduler_pwm_channel_6') | default('--') }}% | 
        **Current:** {{ states('sensor.' + unit + '_scheduler_current_channel_1') | default('--') }}A
      {% else %}
        No units configured for this tank
      {% endif %}
  
  # Preset loader
  - type: entities
    title: Presets
    entities:
      - type: buttons
        entities:
          - name: Dynamic
            icon: mdi:auto-fix
            tap_action:
              action: call-service
              service: script.tank_load_preset
              data:
                preset_name: "dynamic_sunrise_sunset"
                
          - name: Full
            icon: mdi:white-balance-sunny
            tap_action:
              action: call-service
              service: script.tank_load_preset
              data:
                preset_name: "full_spectrum"
                
          - name: Simple
            icon: mdi:lightbulb
            tap_action:
              action: call-service
              service: script.tank_load_preset
              data:
                preset_name: "simple"