# LEDBrick Tank Group Dashboard
# Control groups of synchronized LEDBrick units per tank

type: vertical-stack
cards:
  # Tank selector and overview
  - type: entities
    title: Tank Control Center
    show_header_toggle: false
    entities:
      - entity: input_select.active_tank
        name: Select Tank
        
      - type: section
        label: Tank Information
        
      - type: custom:template-entity-row
        name: Units
        state: "{{ states('sensor.active_tank_units') }}"
        icon: mdi:led-strip-variant
        
      - type: custom:template-entity-row
        name: Status
        state: "{{ states('sensor.active_tank_status') }}"
        icon: mdi:information-outline
        
      - type: custom:template-entity-row
        name: Power Draw
        state: "{{ states('sensor.active_tank_power') }}W"
        icon: mdi:flash
        
      - entity: input_select.tank_type
        name: Tank Type
  
  # Tank group controls
  - type: entities
    title: "{{ states('input_select.active_tank') | replace('_', ' ') | title }} Controls"
    entities:
      # Master brightness for all units in tank
      - entity: input_number.tank_brightness
        name: Tank Brightness
        
      # Scheduler control (all units sync)
      - type: button
        name: Scheduler
        icon: mdi:calendar-clock
        tap_action:
          action: call-service
          service: script.tank_scheduler_control
          data:
            enabled: >
              {% set groups = states('input_text.tank_groups') | from_json %}
              {% set tank = states('input_select.active_tank') %}
              {% set units = groups.get(tank, []) %}
              {% if units | length > 0 %}
                {{ not is_state('switch.' + units[0] + '_scheduler_enabled', 'on') }}
              {% else %}
                true
              {% endif %}
        entity: >
          {% set groups = states('input_text.tank_groups') | from_json %}
          {% set tank = states('input_select.active_tank') %}
          {% set units = groups.get(tank, []) %}
          {% if units | length > 0 %}
            switch.{{ units[0] }}_scheduler_enabled
          {% else %}
            switch.unknown
          {% endif %}
        show_state: true
      
      - type: section
        label: Moon Simulation
        
      - entity: input_number.moon_blue_intensity
        name: Blue Moonlight
        
      - entity: input_number.moon_white_intensity
        name: White Moonlight
  
  # Quick actions
  - type: horizontal-stack
    cards:
      - type: button
        name: Feed
        icon: mdi:fish
        entity: input_boolean.tank_feeding_mode
        tap_action:
          action: toggle
        show_state: true
        
      - type: button
        name: Storm
        icon: mdi:weather-lightning
        tap_action:
          action: call-service
          service: script.tank_storm_effect
          
      - type: button
        name: Maintenance
        icon: mdi:wrench
        entity: input_boolean.tank_maintenance_mode
        tap_action:
          action: toggle
        show_state: true
  
  # Presets for tank group
  - type: entities
    title: Tank Presets
    entities:
      - type: buttons
        entities:
          - name: Dynamic
            icon: mdi:auto-fix
            tap_action:
              action: call-service
              service: script.tank_load_preset
              data:
                preset_name: "dynamic_sunrise_sunset"
                
          - name: Full Spectrum
            icon: mdi:white-balance-sunny
            tap_action:
              action: call-service
              service: script.tank_load_preset
              data:
                preset_name: "full_spectrum"
                
          - name: Simple
            icon: mdi:lightbulb
            tap_action:
              action: call-service
              service: script.tank_load_preset
              data:
                preset_name: "simple"
      
      - type: button
        name: Clear Schedule
        icon: mdi:delete-sweep
        action_name: CLEAR
        tap_action:
          action: call-service
          service: script.clear_tank_schedule
          confirmation:
            text: Clear schedule for all units in this tank?
  
  # Per-unit status (shows all units in selected tank)
  - type: custom:auto-entities
    card:
      type: entities
      title: Unit Status
    filter:
      template: >
        {% set groups = states('input_text.tank_groups') | from_json %}
        {% set tank = states('input_select.active_tank') %}
        {% set units = groups.get(tank, []) %}
        {% set entities = [] %}
        {% for unit in units %}
          {% set entities = entities + [
            {'entity': 'switch.' + unit + '_scheduler_enabled',
             'name': unit + ' Scheduler',
             'secondary_info': 'last-changed'},
            {'entity': 'number.' + unit + '_pwm_scale',
             'name': unit + ' Brightness'},
            {'entity': 'sensor.' + unit + '_temperature',
             'name': unit + ' Temperature'}
          ] %}
        {% endfor %}
        {{ entities }}
  
  # Power monitoring across all tanks
  - type: horizontal-stack
    cards:
      - type: gauge
        entity: sensor.active_tank_power
        name: Current Tank
        unit: "W"
        severity:
          green: 0
          yellow: 200
          red: 400
        max: 500
        
      - type: gauge
        entity: sensor.all_tanks_power
        name: All Tanks
        unit: "W"
        severity:
          green: 0
          yellow: 500
          red: 800
        max: 1000
  
  # Tank group configuration
  - type: conditional
    conditions:
      - entity: input_boolean.edit_tank_groups
        state: "on"
    card:
      type: markdown
      content: |
        ## Tank Group Configuration
        
        Edit the JSON below to configure your tank groups:
        ```json
        {{ states('input_text.tank_groups') }}
        ```
        
        **Format:**
        ```json
        {
          "tank_name": ["unit1", "unit2", "unit3"],
          "another_tank": ["unit4"]
        }
        ```
  
  # Edit mode toggle
  - type: entities
    entities:
      - entity: input_boolean.edit_tank_groups
        name: Edit Tank Groups
        icon: mdi:pencil

# Additional helpers needed
input_boolean:
  edit_tank_groups:
    name: "Edit Tank Groups"
    icon: mdi:pencil
    initial: off

# Clear schedule script
script:
  clear_tank_schedule:
    alias: "Clear Schedule - Tank Group"
    sequence:
      - variables:
          groups: "{{ states('input_text.tank_groups') | from_json }}"
          tank: "{{ states('input_select.active_tank') }}"
          units: "{{ groups.get(tank, []) }}"
      
      - repeat:
          for_each: "{{ units }}"
          sequence:
            - service: "esphome.{{ repeat.item }}_clear_schedule"
              continue_on_error: true

# Required custom cards:
# - custom:auto-entities
# - custom:template-entity-row