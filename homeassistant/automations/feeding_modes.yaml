# Feeding and Maintenance Mode Automations

automation:
  # Feeding Mode - Dim lights and pause pumps
  - alias: "Feeding Mode Start"
    id: feeding_mode_start
    trigger:
      - platform: state
        entity_id: input_boolean.feeding_mode
        to: "on"
    action:
      # Store current brightness
      - service: input_text.set_value
        target:
          entity_id: input_text.previous_pwm_scale
        data:
          value: "{{ states('number.ledbrickplus_pwm_scale') }}"
      
      # Dim to feeding brightness (30%)
      - service: number.set_value
        target:
          entity_id: number.ledbrickplus_pwm_scale
        data:
          value: 30
      
      # Notify user
      - service: notify.mobile_app_phone
        data:
          title: "üêü Feeding Mode Active"
          message: "Lights dimmed to 30% for {{ states('input_number.feeding_duration') }} minutes"
          data:
            tag: feeding_mode
            actions:
              - action: "END_FEEDING"
                title: "End Now"
      
      # Turn off return pump if integrated
      - service: switch.turn_off
        target:
          entity_id: switch.return_pump
        continue_on_error: true
      
      # Start timer
      - service: timer.start
        target:
          entity_id: timer.feeding_timer
        data:
          duration: "00:{{ states('input_number.feeding_duration') | int }}:00"
  
  # Feeding Mode - Auto end
  - alias: "Feeding Mode End"
    id: feeding_mode_end
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.feeding_timer
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "END_FEEDING"
      - platform: state
        entity_id: input_boolean.feeding_mode
        to: "off"
    action:
      # Restore previous brightness
      - service: number.set_value
        target:
          entity_id: number.ledbrickplus_pwm_scale
        data:
          value: "{{ states('input_text.previous_pwm_scale') | float }}"
      
      # Turn off feeding mode
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.feeding_mode
      
      # Turn on return pump
      - service: switch.turn_on
        target:
          entity_id: switch.return_pump
        continue_on_error: true
      
      # Notify
      - service: notify.mobile_app_phone
        data:
          title: "‚úÖ Feeding Mode Complete"
          message: "Lights and pumps restored to normal"
          data:
            tag: feeding_mode
  
  # Maintenance Mode - Very dim lights
  - alias: "Maintenance Mode Toggle"
    id: maintenance_mode_toggle
    trigger:
      - platform: state
        entity_id: input_boolean.maintenance_mode
    action:
      - choose:
          # Turning on maintenance mode
          - conditions:
              - condition: state
                entity_id: input_boolean.maintenance_mode
                state: "on"
            sequence:
              # Store current state
              - service: input_text.set_value
                target:
                  entity_id: input_text.previous_pwm_scale
                data:
                  value: "{{ states('number.ledbrickplus_pwm_scale') }}"
              
              - service: input_text.set_value
                target:
                  entity_id: input_text.previous_mode
                data:
                  value: "{{ states('input_select.lighting_mode') }}"
              
              # Set maintenance lighting
              - service: number.set_value
                target:
                  entity_id: number.ledbrickplus_pwm_scale
                data:
                  value: 10  # Very dim
              
              - service: input_select.select_option
                target:
                  entity_id: input_select.lighting_mode
                data:
                  option: "Maintenance"
              
              # Disable moon simulation during maintenance
              - service: switch.turn_off
                target:
                  entity_id: switch.ledbrickplus_moon_simulation_enabled
          
          # Turning off maintenance mode
          - conditions:
              - condition: state
                entity_id: input_boolean.maintenance_mode
                state: "off"
            sequence:
              # Restore previous state
              - service: number.set_value
                target:
                  entity_id: number.ledbrickplus_pwm_scale
                data:
                  value: "{{ states('input_text.previous_pwm_scale') | float }}"
              
              - service: input_select.select_option
                target:
                  entity_id: input_select.lighting_mode
                data:
                  option: "{{ states('input_text.previous_mode') }}"
              
              # Re-enable moon simulation
              - service: switch.turn_on
                target:
                  entity_id: switch.ledbrickplus_moon_simulation_enabled
  
  # Night Viewing Mode - Red/Blue only
  - alias: "Night Viewing Mode"
    id: night_viewing_mode
    trigger:
      - platform: state
        entity_id: input_boolean.night_viewing
    action:
      - choose:
          # Enable night viewing
          - conditions:
              - condition: state
                entity_id: input_boolean.night_viewing
                state: "on"
            sequence:
              # Disable scheduler temporarily
              - service: switch.turn_off
                target:
                  entity_id: switch.ledbrickplus_scheduler_enabled
              
              # Set custom channel values for night viewing
              - service: light.turn_on
                target:
                  entity_id: light.ledbrickplus_channel_1  # Blue
                data:
                  brightness_pct: 20
              
              - service: light.turn_on
                target:
                  entity_id: light.ledbrickplus_channel_6  # Red
                data:
                  brightness_pct: 5
              
              # Turn off other channels
              - service: light.turn_off
                target:
                  entity_id:
                    - light.ledbrickplus_channel_2
                    - light.ledbrickplus_channel_3
                    - light.ledbrickplus_channel_4
                    - light.ledbrickplus_channel_5
                    - light.ledbrickplus_channel_7
                    - light.ledbrickplus_channel_8
          
          # Disable night viewing
          - conditions:
              - condition: state
                entity_id: input_boolean.night_viewing
                state: "off"
            sequence:
              # Re-enable scheduler
              - service: switch.turn_on
                target:
                  entity_id: switch.ledbrickplus_scheduler_enabled
  
  # Photography Mode
  - alias: "Photography Mode"
    id: photography_mode
    trigger:
      - platform: state
        entity_id: input_select.lighting_mode
        to: "Photography"
    action:
      # Set optimal photography brightness
      - service: number.set_value
        target:
          entity_id: number.ledbrickplus_pwm_scale
        data:
          value: "{{ states('input_number.photo_brightness') | int }}"
      
      # Temporarily boost white channels
      - service: esphome.ledbrickplus_set_schedule_point_8ch
        data:
          time_minutes: "{{ now().hour * 60 + now().minute }}"
          pwm_ch1: 60   # Blue
          pwm_ch2: 60   # Royal Blue
          pwm_ch3: 20   # UV
          pwm_ch4: 100  # Cool White - max
          pwm_ch5: 80   # Warm White
          pwm_ch6: 30   # Red
          pwm_ch7: 40   # Green
          pwm_ch8: 20   # Far Red
          current_ch1: 1.2
          current_ch2: 1.2
          current_ch3: 0.4
          current_ch4: 2.0
          current_ch5: 1.6
          current_ch6: 0.6
          current_ch7: 0.8
          current_ch8: 0.4
      
      # Auto-disable after 30 minutes
      - delay:
          minutes: 30
      
      - service: input_select.select_option
        target:
          entity_id: input_select.lighting_mode
        data:
          option: "Schedule"

# Timer for feeding mode
timer:
  feeding_timer:
    name: Feeding Timer
    icon: mdi:timer-sand