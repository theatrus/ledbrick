name: Unit Tests

on:
  push:
    branches: [ master, main, '*' ]
    paths: 
      - 'firmware/components/ledbrick_scheduler/**'
      - 'firmware/test_*.cpp'
      - 'firmware/test_framework.h'
      - 'firmware/Makefile'
      - '.github/workflows/unit-tests.yml'
  pull_request:
    branches: [ master, main ]
    paths: 
      - 'firmware/components/ledbrick_scheduler/**'
      - 'firmware/test_*.cpp'
      - 'firmware/test_framework.h'
      - 'firmware/Makefile'
      - '.github/workflows/unit-tests.yml'

jobs:
  test:
    name: Unit Tests (${{ matrix.os }}, ${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        exclude:
          # macOS uses clang by default, skip gcc on macOS
          - os: macos-latest
            compiler: gcc
    
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    
    - name: Install build dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ clang
    
    - name: Install build dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS has clang pre-installed
        echo "Using built-in clang compiler"
        clang++ --version
    
    - name: Run unit tests
      working-directory: ./firmware
      run: |
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          echo "=== Running unit tests with clang++ on ${{ matrix.os }} ==="
          clang++ --version
          make clean
          make test-clang
        else
          echo "=== Running unit tests with g++ on ${{ matrix.os }} ==="
          g++ --version
          make clean
          make test
        fi
    
    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.compiler }}
        path: firmware/build/