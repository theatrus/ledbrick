esphome:
  name: ledbrickplus
  friendly_name: ledbrickplus
  project:
    name: "ledbrick.plus"
    version: "__VERSION__"

dashboard_import:
  package_import_url: github://theatrus/ledbrick/firmware/ledbrick-plus.yaml@master
  import_full_config: false


esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ledbrickplus Fallback Hotspot"
    password: "gOqXwag35TIP"

captive_portal:
    
# Time synchronization with automatic timezone detection
time:
  - platform: homeassistant
    id: homeassistant_time
    on_time_sync:
      - logger.log: "Time synchronized via Home Assistant with timezone"
  - platform: sntp
    id: sntp_time
    servers:
      - pool.ntp.org
      - time.nist.gov
    # Use Home Assistant's timezone when available, fallback to America/Los_Angeles
    timezone: America/Los_Angeles
    on_time_sync:
      - logger.log: "Time synchronized via SNTP with timezone"

external_components:
  - source:
      type: git
      url: https://github.com/theatrus/mcpwm_unified
      ref: ebfcc0a743dfe2ccbdd7d582cc5bd97225980ee2
    components: [ mcpwm_unified ]
  - source:
      type: local
      path: components
    components: [ ledbrick_scheduler ]

# Our custom scheduler component with services
ledbrick_scheduler:
  id: main_scheduler
  channels: 8  # Full 8-channel configuration
  update_interval: 1s             # Update every second for smooth transitions
  time_source: homeassistant_time  # Prefer Home Assistant time for timezone support
  timezone: America/Los_Angeles     # Set your local timezone or leave default to match Home Assistant


status_led:
  pin: GPIO1

# Channel definitions using packages
packages:
  channel1: !include { file: packages/channel.yaml, vars: { channel_number: "1", pwm_pin: "GPIO5", current_pin: "GPIO6" } }
  channel2: !include { file: packages/channel.yaml, vars: { channel_number: "2", pwm_pin: "GPIO7", current_pin: "GPIO8" } }
  channel3: !include { file: packages/channel.yaml, vars: { channel_number: "3", pwm_pin: "GPIO9", current_pin: "GPIO10" } }
  channel4: !include { file: packages/channel.yaml, vars: { channel_number: "4", pwm_pin: "GPIO11", current_pin: "GPIO12" } }
  channel5: !include { file: packages/channel.yaml, vars: { channel_number: "5", pwm_pin: "GPIO13", current_pin: "GPIO14" } }
  channel6: !include { file: packages/channel.yaml, vars: { channel_number: "6", pwm_pin: "GPIO15", current_pin: "GPIO16" } }
  channel7: !include { file: packages/channel.yaml, vars: { channel_number: "7", pwm_pin: "GPIO17", current_pin: "GPIO18" } }
  channel8: !include { file: packages/channel.yaml, vars: { channel_number: "8", pwm_pin: "GPIO33", current_pin: "GPIO34" } }
  # Uncomment the line below to enable the LEDBrick Scheduler with Home Assistant services
  scheduler: !include packages/scheduler_services.yaml

output:
  # Fan PWM output - separate from channel packages
  - platform: mcpwm_unified
    id: fan_pwm
    pin: GPIO37
    frequency: 16000Hz
    inverted: true

switch:
  - platform: gpio
    pin: GPIO36
    name: "Fan power"
    id: fan_pwr
    restore_mode: RESTORE_DEFAULT_ON

fan:
  - platform: speed
    output: fan_pwm
    name: Fan Speed
    id: fan_output
    restore_mode: RESTORE_DEFAULT_ON


# Light entities are now defined in the channel package

# Status LED - WS2812 RGB on GPIO21
light:
  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: GPIO21
    num_leds: 1
    chipset: WS2812
    name: "Status LED"
    id: status_rgb_led
    effects:
      - pulse:
          name: "Pulse"
          transition_length: 1s
          update_interval: 1s
      - strobe:
          name: "Strobe"
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 0%
              blue: 0%
              duration: 500ms
            - state: false
              duration: 250ms
      - addressable_rainbow:
          name: "Rainbow"
          speed: 10
          width: 50

# 1-Wire bus on GPIO41
one_wire:
  - platform: gpio
    pin: GPIO41
    id: onewire_bus

i2c:
  sda: GPIO3
  scl: GPIO4
  scan: true
  id: bus_a

sensor:
  - platform: ina2xx_i2c
    id: current_sensor
    model: INA228
    address: 0x40
    shunt_resistance: 0.005 ohm
    max_current: 20 A
    adc_range: 0
    update_interval: 5s
    current: "INA228 Current"
    bus_voltage: "INA228 Bus Voltage"
    charge: "INA228 Charge"

  - platform: pulse_counter
    pin: 
      number: GPIO35
      mode: INPUT
    unit_of_measurement: 'RPM'
    id: fan_speed
    name: Fan Speed
    accuracy_decimals: 0
    update_interval: 5s
    filters:
      - multiply: 0.5

  # Dallas temperature sensors (DS18B20) - auto-discovery enabled
  # ESPHome will automatically discover and create entities for all DS18B20 sensors
  - platform: dallas_temp
    one_wire_id: onewire_bus
    # Auto-discovery: omitting address makes ESPHome discover all sensors
    name: "Temperature Sensor"
    # Additional sensors can be configured manually if specific naming is needed:
    # - platform: dallas_temp
    #   one_wire_id: onewire_bus
    #   address: 0x1c0000031edd2a28
    #   name: "Heatsink Temperature"
